@page "/"
@using System.IO
@using BlazorInputFile
@using Itemdex.Core

<header>
    <h1 class="logo stroke--2px">Terraria Itemdex</h1>
</header>

@if (!uploaded)
{
    <p class="stroke--1px">Upload your Terraria Player file (*.plr) to see how far you've come!</p>

    <InputFile OnChange="HandleSelection"/>
}
else if (_itemdex.SaveVersion < 218)
{
    <p>Looks like this save is from version @_itemdex.SaveVersion, Itemdex only works with version 218 and above!</p>
}
else if (_itemdex.NoProgress)
{
    <p>"No progress has been made! (Is @_itemdex.CharacterName even a journey mode character?)"!</p>
}
else
{
    <div class="report-section">
        <p>Complete: @_progressReport.Complete.Count</p>
        <div class="item-grid">
            @foreach (var item in _progressReport.Complete)
            {
                <div class="grid-cell--complete">
                    <img src="https://minio.acpostermaker.com/terraria/Item_@(item.Id).png">
                </div>
            }
        </div>
    </div>
    <div class="report-section">
        <p>Incomplete: @_progressReport.Incomplete.Count</p>
        <div class="item-grid">
            @foreach (var item in _progressReport.Incomplete)
            {
                <div class="grid-cell--incomplete">
                    <img src="https://minio.acpostermaker.com/terraria/Item_@(item.Id).png">
                </div>
            }
        </div>
    </div>
    <div class="report-section">
        <p>Not Started: @_progressReport.NotStarted.Count</p>
        <div class="item-grid">
            @foreach (var item in _progressReport.NotStarted)
            {
                <div class="grid-cell--not-started">
                    <img src="https://minio.acpostermaker.com/terraria/Item_@(item.Id).png">
                </div>
            }
        </div>
    </div>
}

@code {
    string status;
    bool uploaded;
    ProgressReport _progressReport;
    Itemdex _itemdex;

    async Task HandleSelection(IFileListEntry[] files)
    {
        var file = files.FirstOrDefault();
        if (file != null)
        {
            await using var ms = new MemoryStream();
            await file.Data.CopyToAsync(ms);

            _itemdex = new Itemdex();
            Reader.ExtractJourneyModeProgressFromFile(ms, _itemdex);

            _progressReport = _itemdex.Evaluate();
            uploaded = true;
        }
    }

}